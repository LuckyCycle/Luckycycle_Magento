<?php

require_once(Mage::getBaseDir('lib') . '/luckysdk/lucky.php');

// Get module settings from admin panel
$enabledSnippet = Mage::getStoreConfig('snippetsdk/params/enabled');
$apipoke = Mage::getStoreConfig('snippetsdk/params/apipoke');
$apiKey = trim(Mage::getStoreConfig('snippetsdk/params/api_id'));
$operationKey = trim(Mage::getStoreConfig('snippetsdk/params/operation_id'));
$payment_methods = explode(",", Mage::getStoreConfig('snippetsdk/params/payment_method_luckycyclesdk'));
$salt = Mage::getStoreConfig('snippetsdk/js_snippet/salt');

// Get global data
$storeCode = Mage::app()->getStore()->getCode();
$userIP = Mage::helper('core/http')->getRemoteAddr();

// Get data about current order
$orderId = $this->getOrderId();
$session = Mage::getSingleton("core/session");
$session->setData("orderId", $orderId);
$order = Mage::getModel('sales/order')->loadByIncrementId($orderId);
$paymentMethodCode = $order->getPayment()->getMethodInstance()->getCode();
$quote = Mage::getModel('sales/quote')->load($order->getQuoteId());
$orderDetails = $order->getData();
$couponCode = $orderDetails['coupon_code'];
$discount = $order->getDiscountAmount();

// we check if module is enabled
if ($enabledSnippet) {
    // do we want to make the poke and show the box (html_data)
    if ($apipoke){
        // if yes then we try to hit the LC API
        if ($operationKey && $apiKey) {
            // Get user ID...
            $customerId = Mage::getSingleton('customer/session')->getCustomerId();
            $segment = "";
            if ($customerId) {
                // ... when logged in
                $customer = Mage::getSingleton('customer/session')->getCustomer();
                $firstName = $customer->getFirstname();
                $lastName = $customer->getLastname();
                $emailCustomer = $customer->getEmail();
            } else {
                // ... when not logged in (guest)
                $firstName = $quote->getBillingAddress()->getFirstname();
                $lastName = $quote->getBillingAddress()->getLastname();
                $emailCustomer = $quote->getBillingAddress()->getEmail();
                $customerId = "guest_" . md5("guest".$emailCustomer);
            }

            // Get currency / locale
            $currency = $order->getOrderCurrency();
            if (is_object($currency)) {
                $currencyCode = $currency->getCurrencyCode();
            }
            $currencySymbol = Mage::app()->getLocale()->currency($currencyCode)->getSymbol();
            $language = Mage::getStoreConfig('general/locale/code', Mage::app()->getStore()->getId());
            $language = explode('_', $language);
            $language = $language[0];

            // Get amount
            $amount = $order->getGrandTotal() - $order->getShippingAmount();
            $real_paid = $quote['grand_total'];

            // Get cart
            $the_cart = array();

            foreach ($quote->getAllItems() as $order_item) {

                // Get item price including tax -- excluding free products
                $price = $order_item->getPriceInclTax();
                if ($price > 0) {
                    $item['price'] = $order_item->getPriceInclTax();
                    $item['quantity'] = $order_item->getQty();
                    $item['product_id'] = $order_item->getProduct()->getId();
                    $item['product_name'] = $order_item->getProduct()->getName();
                    $item['product_url'] = $order_item->getProduct()->getProductUrl();

                    // Increment total discount with this item
                    $discount += $order_item->getBaseDiscountAmount();

                    // Get item category ID
                    $topCategory = Mage::getResourceModel('catalog/category_collection')
                        ->addIdFilter($order_item->getProduct()->getCategoryIds())
                        ->setOrder('level', 'ASC')
                        ->setPage(1, 1)
                        ->getFirstItem();
                    $topCategoryId = $topCategory->getId();
                    $item['category_id'] = $topCategoryId;

                    // get category list
                    $cats = $order_item->getProduct()->getCategoryCollection();
                    $temp=[];
                    foreach($cats as $cat) {
                        array_push($temp, $cat->getId());
                    }
                    $item['categories'] = implode(',', $temp);

                    // Get product ID
                    $model_product = Mage::getModel('catalog/product');
                    $_productObject = $model_product->load($order_item->getProduct()->getId());

                    // Get manufacturer ID
                    if ($_productObject->getAttributeText('manufacturer')) {
                        $item['manufacturer_id'] = $_productObject->getAttributeText('manufacturer');
                    } else {
                        $item['manufacturer_id'] = 1;
                    }

                    $item['reference'] = 'reference';

                    // Fill the cart with item
                    array_push($the_cart, $item);
                }
            }

            // Setup API call to Luckycycle
            $req = new LuckyCycleApi('https://www.luckycycle.com');
            //$req = new LuckyCycleApi('http://10.1.205.10:3000');
            $req->setApiKey($apiKey);
            $req->setOperationId($operationKey);

            // signature
            $to_sign = trim((string)$orderId . (string)$customerId . $salt);
            $sig = md5($to_sign);

            // Prepare poke data
            $pokedata = array(
                'user_uid' => (string)$customerId,
                'item_uid' => (string)$orderId,
                'item_value' => (string)$amount,
                'item_currency' => (string)$currencyCode,
                'language' => (string)$language,
                'firstname' => (string)$firstName,
                'lastname' => (string)$lastName,
                'email' => (string)$emailCustomer,
                'discount' => (string)$discount,
                'payment_method' => (string)$paymentMethodCode,
                'shipping_value' => (string)$order->getShippingAmount(),
                "order_date" => (string)$order->getCreatedAt(),
                'signature' => $sig,
                'poke_software_version' => "Magento ".(string)Mage::getVersion()." snippedsdk v2.1",
                //'order_date' => (string)$order->getCreatedAt(),
                'poke_data' => '{ "store_code": "'.(string)$storeCode.'", "user_ip": "'.(string)$userIP.'"}',
                'cart' => $the_cart
            );


            $session->setData("pokedata", $pokedata);
            //echo "session:".$session->getData('orderId');

            // Force error (PIKE) if the current payment method is not in the list of eligible payment methods
            if(!in_array($paymentMethodCode, $payment_methods)) {
                $pokedata['force_pike'] == 1;
            }
            Mage::log("Luckycycle : trying normal shipping");
            try {
                // Make API call to Luckycycle
                $poke = $req->poke($pokedata);
            } catch (Exception $e) {
                Mage::log("Luckycycle : ". $e->getMessage());
            }

            if($poke)
            {
                // Show html_data response (either the iframe or an error)
                ?>
                <div id="content-api-luckycycle">
                    <?php echo "<div>" . $poke['html_data'] . "</div>"; ?>
                    <script>console.log("Poke done, insertint html_data");</script>
                </div>
            <?php
            } else {
                Mage::log("Luckycycle didnt get a valid response from the API call.");
            }
        } else {
            Mage::log("Luckycycle : Wrong API key or operation ID.");
        }
    } else {
        // we still inject lcframe just in case we directly use fjs
        echo '<div id="lcframe"></div>';
    }
} else {
    Mage::log("Luckycycle module is not enable");
}